!function e(n,i,t){function r(a,u){if(!i[a]){if(!n[a]){var s="function"==typeof require&&require;if(!u&&s)return s(a,!0);if(o)return o(a,!0);var d=new Error("Cannot find module '"+a+"'");throw d.code="MODULE_NOT_FOUND",d}var c=i[a]={exports:{}};n[a][0].call(c.exports,function(e){var i=n[a][1][e];return r(i?i:e)},c,c.exports,e,n,i,t)}return i[a].exports}for(var o="function"==typeof require&&require,a=0;a<t.length;a++)r(t[a]);return r}({1:[function(e,n,i){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}var r=e("./modules/sphere.js"),o=t(r),a=document.getElementById("canvas-webgl"),u=new THREE.WebGLRenderer({antialias:!0,canvas:a}),s=new THREE.Scene,d=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e4),c=new THREE.Clock,l=new o["default"],f=function(){a.width=window.innerWidth,a.height=window.innerHeight,d.aspect=window.innerWidth/window.innerHeight,d.updateProjectionMatrix(),u.setSize(window.innerWidth,window.innerHeight),l.resize()},w=function(){$(window).on("resize",function(){f()})},h=function(){var e=new dat.GUI,n={radius:e.add(l,"radius",0,1e3).name("Sphere Radius")};n.radius.onChange(function(e){l.mesh.material.uniforms.radius.value=e})},v=function(){l.render(c.getDelta()),u.render(s,d)},m=function g(){v(),requestAnimationFrame(g)},p=function(){u.setSize(window.innerWidth,window.innerHeight),u.setClearColor(15658734,1),d.position.set(1e3,1e3,1e3),d.lookAt(new THREE.Vector3),s.add(l.mesh),w(),h(),f(),m()};p()},{"./modules/sphere.js":2}],2:[function(e,n,i){"use strict";function t(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(i,"__esModule",{value:!0});var r=function(){function e(e,n){for(var i=0;i<n.length;i++){var t=n[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(n,i,t){return i&&e(n.prototype,i),t&&e(n,t),n}}(),o=function(){function e(){t(this,e),this.radius=200,this.uniforms=null,this.mesh=this.createMesh()}return r(e,[{key:"createMesh",value:function(){return this.uniforms={time:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)},radius:{type:"f",value:this.radius}},new THREE.Mesh(new THREE.SphereGeometry(1,64,64),new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nuniform float radius;\n\nvarying vec4 vPosition;\n\nmat4 scaleMatrix(vec3 scale) {\n  return mat4(\n    scale.x, 0.0, 0.0, 0.0,\n    0.0, scale.y, 0.0, 0.0,\n    0.0, 0.0, scale.z, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nvoid main(void) {\n  vec4 update_position = scaleMatrix(vec3(radius)) * vec4(position, 1.0);\n  vPosition = update_position;\n  gl_Position = projectionMatrix * modelViewMatrix * update_position;\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float radius;\n\nvarying vec4 vPosition;\n\nvoid main(void) {\n  float light = (-vPosition.y / radius + 1.0) / 10.0;\n  vec3 color = vec3(1.0) - light;\n  gl_FragColor = vec4(color, 1.0);\n}\n"}))}},{key:"render",value:function(e){this.uniforms.time.value+=e*this.time}},{key:"resize",value:function(){this.uniforms.resolution.value.set(window.innerWidth,window.innerHeight)}}]),e}();i["default"]=o},{}]},{},[1]);